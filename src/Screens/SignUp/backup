import React, { Component } from 'react'
import { View, Text, Image, FlatList, TouchableHighlight, StyleSheet } from 'react-native'
import { Layout, Select, BottomNavigation, BottomNavigationTab } from '@ui-kitten/components';
import PropTypes from 'prop-types'
import { connect } from 'react-redux'

import {Background, Container, Infos, TextName, TextSeason} from './styles'

export class index extends Component {
  
  static navigationOptions = {
    headerTitle: 'STAR WARS'
  }

  static propTypes = {
    prop: PropTypes
  }

  state = {
    selectedOption: 0
  }
  
  renderItem = ({item,index})=> {
    return(
      <View key={index}>
        {item.eps.map(teste=>{
            return (
              <View style={{flexDirection: 'row', backgroundColor: '#1d262f', margin: 10, borderRadius:10}}>
                  <Image source={{uri: teste.thumb}} style={{width:141, height:80, borderTopLeftRadius:10, borderBottomLeftRadius:10}} />
                  <View style={{flexDirection: 'column', justifyContent: 'space-between', padding: 16}}>
                    <Text style={{color: 'white', fontWeight:'bold'}}>{teste.aired}</Text>
                    <Text style={{color: '#99a0aa',}}>{teste.name}</Text>
                    <Text style={{color: '#99a0aa'}}>{teste.released}</Text>
                  </View>
              </View>
            )
        })}
      </View>
    )
  }

  CustomHeader = () => (
    <React.Fragment>
      <Image
        style={{  flex: 1,
          height: 192}}
        source={{ uri: 'https://cdn.pixabay.com/photo/2017/01/20/00/30/maldives-1993704__340.jpg' }}
      />
      <Text
        style={styles.headerText}
        category='h6'>
        Maldives
      </Text>
    </React.Fragment>
  );

  getDetails = () => {
    const {series,route,episodes} = this.props;
    const { itemId } = route.params;
    const found = series.find(element => element.id === itemId);
    
    const num_seasons = found.season;
    const aux = [{}];
    for(var i = 1; i <= num_seasons; i++){
      aux.push({text: `${i}Âª temporada`})
    }

    if(found && found!== undefined){
      return (
        <Background>
          <Container>
            <Image source={{uri: found.poster}} resizeMode='contain' style={{width:'100%', height: 240, opacity:0.3}}/>
            {/* <BottomNavigation
              selectedIndex={selectedIndex}
              onSelect={setSelectedIndex}>
              <BottomNavigationTab title='USERS'/>
              <BottomNavigationTab title='ORDERS'/>
              <BottomNavigationTab title='TRANSACTIONS'/>
            </BottomNavigation> */}
            <Infos>
              <TextName>{found.title}</TextName>
              <TextSeason>{found.season} temporadas</TextSeason>
              <Layout style={{minWidth: 200, borderRadius:10,marginTop:10}}>
                <Select
                  data={aux}
                  size='medium'
                  selectedOption={this.state.selectedOption}
                  onSelect={()=>{
                    this.setState({selectedOption:1})
                  }}
                />
              </Layout>
              <FlatList
                data={episodes}
                keyExtractor={(item) => item.id_serie} renderItem={this.renderItem}
              />
            </Infos>
            
          </Container>
        </Background>
      )
    }else{
      return null
    }
  }

  render() {
    
    return (  
      this.getDetails()
    )
  }
}

const mapStateToProps = (state) => ({
  series: state.seriesReducer.series,
  episodes: state.episodesReducer.episodes
})

const mapDispatchToProps = {
  
}

const styles = StyleSheet.create({ item: {
  padding: 20,
  justifyContent: 'center', borderColor: 'rgba(255,232,31, .2)', borderBottomWidth: 1
  }, text: {
  color: '#ffe81f',
      fontSize: 18
    }
  });

export default connect(mapStateToProps, mapDispatchToProps)(index)
